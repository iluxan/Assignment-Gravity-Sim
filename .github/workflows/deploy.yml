name: Build and Deploy
on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Build
        run: cargo build --release --target wasm32-unknown-unknown

      - name: Debug - Check if build succeeded
        run: |
          echo "=== Build completed, checking what was created ==="
          echo "Target wasm32-unknown-unknown/release contents:"
          ls -la ./target/wasm32-unknown-unknown/release/
          echo ""
          echo "Looking for any .wasm files:"
          find . -name "*.wasm" -type f

      - name: Prepare Deployment Directory
        run: |
          mkdir -p ./_site
          cp ./target/wasm32-unknown-unknown/release/Assignment-Gravity-Sim.wasm ./_site/
          cp index.html ./_site/
          echo "Successfully copied files"

      - name: Debug - Check deploy directory
        run: |
          echo "Site directory contents:"
          ls -la ./_site/
          echo ""
          echo "Site directory file sizes:"
          du -h ./_site/*

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
